apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp-blue         # deployment 의 이름
spec:                 # 여기부터 rs
  replicas: 3         # Pod 를 3개 띄우겠다! (min)
  selector:
    matchLabels:
      color: blue
  template:           # 여기부터 Pod
    metadata:
      name: mynginx-blue   # pod 의 이름
      labels:
        color: blue
    spec:             # 여기부터 컨테이너
      containers:
      - name: mynginxctn-blue    # 컨테이너의 이름
        image: brian24/kakaodev:blue
        resources:
          limits:
            memory: "32Mi"
            cpu: "200m"     # 1000m 이 cpu 1개를 의미, 500m = 0.5vcpus
        ports:
        - containerPort: 80

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp-green         # deployment 의 이름
spec:                 # 여기부터 rs
  replicas: 3         # Pod 를 3개 띄우겠다! (min)
  selector:
    matchLabels:
      color: green
  template:           # 여기부터 Pod
    metadata:
      name: mynginx-green   # pod 의 이름
      labels:
        color: green
    spec:             # 여기부터 컨테이너
      containers:
      - name: mynginxctn-green    # 컨테이너의 이름
        image: brian24/kakaodev:green
        resources:
          limits:
            memory: "32Mi"
            cpu: "200m"     # 1000m 이 cpu 1개를 의미, 500m = 0.5vcpus
        ports:
        - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: myapp
spec:
  # type 지정이 되지 않았다면 cluster-ip 가 기본 타입
  selector:       # 연결할 Pod 의 Label
    color: blue
  type: LoadBalancer
  ports:
  - port: 80            # LB 의 포트가 됨!!! = Cluster-IP 포트가 됨
    targetPort: 80
    # nodePort: 30001 -> 임의의 NodePort 가 선택됨
    # protocol: TCP   # 대문자로. TCP가 default
